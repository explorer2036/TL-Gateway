server:
  listen_addr: "0.0.0.0:15001" # the grpc listen address
  admin_addr: "0.0.0.0:8002" # the admin entrypoint for prometheus and pprof
  id_service: "192.168.0.4:15002" # the id service address
  timeout: 2 # the timeout for writing the messages to queue
  cache: "local" # the cache type for token validation: local or redis
  tls_switch: false # the switch for the ca certification(default closed)
  tls_perm: "certs/gateway/server.pem" # the perm file for ca certification in grpc server
  tls_key: "certs/gateway/server.key" # the key file for ca certification in grpc server
  tls_ca: "certs/gateway/ca.pem" # the ca file for ca certification in grpc server

cache:
  routines: 10 # number of the goroutines, for sending messages to kafka(default 10)
  buffer: 1048576 # queue size for goroutines which is responsible for sending kafka(default 1M)
  delay_time: 2 # waiting for reading channel when receive exit signals(default 2s)

fusion:
  api_key: "Kc-ntFUr767Qyk0RgbVU8dxLLdjmTM98_XjsAZxOajA" # api key for authorizing the user token
  api_url: "http://209.222.106.245:9011/" # api url for authorizing the user token
  timeout: 5 # timeout for requesting the fusion api

kafka:
  brokers: ["192.168.0.4:9092"] # the kafka brokers
  topic: "TL-Trader" # the kafka topic
  tls_switch: false # the switch for the ca certification(default closed)
  tls_perm: "certs/kafka/client.pem" # the perm file for ca certification in kafka
  tls_key: "certs/kafka/client.key" # the key file for ca certification in kafka
  tls_ca: "certs/kafka/ca.pem" # the ca file for ca certification in kafka

redis:
  passwd: "" # empty if no passwd set for redis
  addr: "192.168.0.4:6379" # the address for redis
  db: 0 # 0 - the default db of redis

log:
  output_level: "info" # the log level with value in [debug, info, warn, error]
  output_path: "stdout" # a file system path to write the log data to
  rotation_path: "./logs/TL-Gateway.log" # the path to a rotating log file
  rotation_max_size: 100 # the maximum size in megabytes of a log file before it get rotated. It defaults to 100 megabytes.
  rotation_max_age: 30 # the maximum number of days to retain old log files based on the timestamp encoded in their filename
  rotation_max_backups: 1000 # the maximum number of old log files to retain
  json_encoding: false # whether the log is formatted as JSON
